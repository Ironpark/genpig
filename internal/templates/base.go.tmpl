// Code generated by "genpig"; DO NOT EDIT.
package {{.PackageName}}
{{$root := .}}
import (
{{if .WithThreadSafe}}"sync"{{end}}
{{range .Imports }}{{.}}{{end}}
{{if .HasJsonTag}}"encoding/json"{{end}}
"github.com/ironpark/genpig"
"os"
)

{{if .WithSingleton}}
    var pggInstance *piggy
    var pggOnce sync.Once
{{end}}

{{if .HasJsonTag}}
    var _  json.Marshaler = (*piggy)(nil)
    var _  json.Unmarshaler = (*piggy)(nil)
{{end}}
type piggy struct {
{{if .WithThreadSafe}}    lock sync.RWMutex{{end}}
cfg {{.OriginalStructName}}
}

{{if .WithSingleton}}
    func getInstance() *piggy {
    pggOnce.Do(func() {
    pggInstance = &piggy{}
    })
    return pggInstance
    }
{{end}}
{{range .Fields }}
    {{if $root.WithSetter}}
        {{if $root.WithThreadSafe}}
            func (pig *piggy) Set{{.Name}}(value {{.Type}}){
            pig.lock.Lock()
            defer pig.lock.Unlock()
            pig.cfg.{{.Name}} = value
            }
        {{else}}
            func (pig *piggy) Set{{.Name}}(value {{.Type}}){
            pig.cfg.{{.Name}} = value
            }
        {{end}}
    {{end}}

    {{if $root.WithThreadSafe}}
        func (pig *piggy) {{.Name}}() {{.Type}} {
        pig.lock.RLock()
        defer pig.lock.RUnlock()
        return pig.cfg.{{.Name}}
        }
    {{else}}
        func (pig *piggy) {{.Name}}() {{.Type}} {
        return pig.cfg.{{.Name}}
        }
    {{end}}
{{end}}

{{if $root.WithThreadSafe}}
    func (pig *piggy) Snapshot() {{.OriginalStructName}} {
    pig.lock.RLock()
    defer pig.lock.RUnlock()
    return pig.cfg
    }
{{else}}
    func (pig *piggy) Snapshot() {{.OriginalStructName}} {
    return pig.cfg
    }
{{end}}

{{if .HasJsonTag}}
    func (pig *piggy) MarshalJSON() ([]byte, error) {
    return json.Marshal(pig.cfg)
    }

    func (pig *piggy) UnmarshalJSON(bytes []byte) error {
    return json.Unmarshal(bytes, &pig.cfg)
    }
{{end}}

func (pig *piggy) Load(){
{{if .HasJsonTag}}searchDirs := []string{ {{.ConfigPaths}} }
fileNames := []string{ {{.ConfigNames}} }
// Default Values
cfgJSON := Config{}
// Json config file load
genpig.LoadJsonConfig(searchDirs, fileNames, &cfgJSON){{end}}
{{range .ConfigMerge }}{{.}}
{{end}}
}