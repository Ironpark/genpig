// Code generated by "genpig"; DO NOT EDIT.
package {{.PackageName}}
{{$root := .}}
import (
{{if .WithThreadSafe}}"sync"{{end}}
{{range .Imports }}{{.}}{{end}}
{{if .HasJsonTag}}"encoding/json"{{end}}
"github.com/ironpark/genpig"
"os"
)

{{if .WithSingleton}}
var pggInstance *Piggy
var pggOnce sync.Once
{{end}}

{{if .HasJsonTag}}
var _  json.Marshaler = (*Piggy)(nil)
var _  json.Unmarshaler = (*Piggy)(nil)
{{end}}
type Piggy struct {
{{if .WithThreadSafe}}    lock sync.RWMutex{{end}}
    cfg {{.OriginalStructName}}
}

{{if .WithSingleton}}
func GetInstance() *Piggy {
    pggOnce.Do(func() {
        pggInstance = &Piggy{}
    })
    return pggInstance
}
{{end}}
{{range .Fields }}
    {{if $root.WithSetter}}
        {{if $root.WithThreadSafe}}
            func (pig *Piggy) Set{{.Name}}(value {{.Type}}){
                pig.lock.Lock()
                defer pig.lock.Unlock()
                pig.cfg.{{.Name}} = value
            }
        {{else}}
            func (pig *Piggy) Set{{.Name}}(value {{.Type}}){
                pig.cfg.{{.Name}} = value
            }
        {{end}}
    {{end}}

    {{if $root.WithThreadSafe}}
        func (pig *Piggy) {{.Name}}() {{.Type}} {
            pig.lock.RLock()
            defer pig.lock.RUnlock()
            return pig.cfg.{{.Name}}
        }
    {{else}}
        func (pig *Piggy) {{.Name}}() {{.Type}} {
            return pig.cfg.{{.Name}}
        }
    {{end}}
{{end}}

{{if $root.WithThreadSafe}}
    func (pig *Piggy) Snapshot() {{.OriginalStructName}} {
        pig.lock.RLock()
        defer pig.lock.RUnlock()
        return pig.cfg
    }
{{else}}
    func (pig *Piggy) Snapshot() {{.OriginalStructName}} {
        return pig.cfg
    }
{{end}}

{{if .HasJsonTag}}
    func (pig *Piggy) MarshalJSON() ([]byte, error) {
       return json.Marshal(pig.cfg)
    }

    func (pig *Piggy) UnmarshalJSON(bytes []byte) error {
        return json.Unmarshal(bytes, &pig.cfg)
    }
{{end}}

func (pig *Piggy) Load(){
{{if .HasJsonTag}}searchDirs := []string{ {{.ConfigPaths}} }
fileNames := []string{ {{.ConfigNames}} }
// Default Values
cfgJSON := Config{}
// Json config file load
genpig.LoadJsonConfig(searchDirs, fileNames, &cfgJSON){{end}}
{{range .ConfigMerge }}{{.}}
{{end}}
}